name: Update Game Images

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"

jobs:
  check-update:
    runs-on: ubuntu-latest
    outputs:
      changed-list: ${{ steps.get-changed-list.outputs.changed_list }}
      pushed: ${{ steps.commit-changes.outputs.pushed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch game info
        id: fetch-game-info
        run: |
          gameinfo=`curl -s "https://api.steamcmd.net/v1/info/343050"`
          echo "gameinfo=$gameinfo" >> "$GITHUB_ENV"

          echo "::group::Game info"
          echo $gameinfo | jq
          echo "::endgroup::"

      - name: Get changed list
        id: get-changed-list
        run: |
          if [ -f version.csv ]; then
            previous=`cat version.csv | tail -n 1 | awk -F',' '{print $3}'`
          else
            previous=0
          fi

          current=`echo $gameinfo | jq -r ".data.\"343050\".depots.branches | to_entries[] | select(.value.pwdrequired != \"1\") | \"\\(.key),\\(.value.buildid),\\(.value.timeupdated)\"" | sort -t, -k3 -n | tail -n 1 | awk -F',' '{print $3}'`

          echo "::group::Timeupdated"
          echo "previous=$previous"
          echo "current=$current"
          echo "::endgroup::"

          changed_list=`echo $gameinfo | jq -cr ".data.\"343050\".depots.branches | to_entries | map({branch: .key} + .value) | map(select(.pwdrequired != \"1\" and .timeupdated > \"$previous\" and .timeupdated <= \"$current\"))"`
          echo "changed_list=$changed_list" >> "$GITHUB_OUTPUT"

          echo "::group::Changed list"
          echo $changed_list | jq
          echo "::endgroup::"

      - name: Update version csv
        run: |
          echo "branch,buildid,timeupdated" > version.csv
          csv_data=`echo $gameinfo | jq -r ".data.\"343050\".depots.branches | to_entries[] | select(.value.pwdrequired != \"1\") | \"\\(.key),\\(.value.buildid),\\(.value.timeupdated)\"" | sort -t, -k3 -n`
          echo "$csv_data" >> version.csv

          echo "::group::Version csv"
          cat version.csv
          echo "::endgroup::"

      - name: Commit changes
        id: commit-changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "update version csv"
          add: "version.csv"

  update-images:
    needs: check-update
    if: needs.check-update.outputs.changed-list != '[]' && needs.check-update.outputs.pushed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        changed-item: ${{ fromJson(needs.check-update.outputs.changed-list) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push public
        if: matrix.changed-item.branch == 'public'
        uses: docker/build-push-action@v5
        with:
          context: ./build
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/dontstarvetogether:public
            ${{ secrets.DOCKERHUB_USERNAME }}/dontstarvetogether:latest
          build-args: |
            DST_BRANCH=${{ matrix.changed-item.branch }}
            DST_BUILDID=${{ matrix.changed-item.buildid }}
            DST_TIMEUPDATED=${{ matrix.changed-item.timeupdated }}

      - name: Build and push beta
        if: matrix.changed-item.branch != 'public'
        uses: docker/build-push-action@v5
        with:
          context: ./build
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dontstarvetogether:${{ matrix.changed-item.branch }}
          build-args: |
            DST_BRANCH=${{ matrix.changed-item.branch }}
            DST_BUILDID=${{ matrix.changed-item.buildid }}
            DST_TIMEUPDATED=${{ matrix.changed-item.timeupdated }}
