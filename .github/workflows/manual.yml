name: Update Game Image (Manual)

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "bullseye/Dockerfile"

jobs:
  fetch-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.fetch-versions.outputs.versions }}
    steps:
      - name: Fetch versions
        id: fetch-versions
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends --no-install-suggests curl jq
          echo "versions=$(curl -s 'https://api.steamcmd.net/v1/info/343050' | jq -r '.data."343050".depots.branches | to_entries[] | select(.value.pwdrequired != "1") | "\(.key)"' | jq -cnR '[inputs]')" >> "$GITHUB_OUTPUT"

  update-image:
    needs: fetch-versions
    if: needs.fetch-versions.outputs.versions != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ${{ fromJson(needs.fetch-versions.outputs.versions) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./bullseye
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dontstarvetogether:${{ matrix.version }}
          build-args: BRANCH=${{ matrix.version }}

      - name: Build and push latest
        if: matrix.version == 'public'
        uses: docker/build-push-action@v5
        with:
          context: ./bullseye
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dontstarvetogether:latest
          build-args: BRANCH=${{ matrix.version }}
