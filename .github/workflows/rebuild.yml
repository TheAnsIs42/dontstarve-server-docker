name: Rebuild Game & Toolbox Images manually for All Branches

on:
  workflow_dispatch:

jobs:
  get-rebuild-list:
    runs-on: ubuntu-latest
    outputs:
      rebuild-list: ${{ steps.read-csv.outputs.rebuild_list }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Fetch game info
        id: fetch-game-info
        run: |
          max_retries=3
          retry_count=0
          success=false

          while [ $retry_count -lt $max_retries ] && [ "$success" = "false" ]; do
            retry_count=$((retry_count + 1))
            echo "::group::Attempt $retry_count of $max_retries"
            
            gameinfo=`curl -s "https://api.steamcmd.net/v1/info/343050"`
            if [ -z "$gameinfo" ]; then
              echo "(curl) Failed to fetch game info."
              echo "::endgroup::"
              if [ $retry_count -eq $max_retries ]; then
                exit 1
              fi
              sleep 5
              continue
            fi

            status=`echo $gameinfo | jq -r ".status"`
            data=`echo $gameinfo | jq -r ".data.\"343050\""`
            if [ "$status" = "failed" ] || [ "$data" = "{}" ]; then
              echo "(steamcmd) API request failed or returned empty data."
              echo "::endgroup::"
              if [ $retry_count -eq $max_retries ]; then
                exit 1
              fi
              sleep 5
              continue
            fi

            success=true
            echo "Successfully fetched game info on attempt $retry_count"
            echo "::endgroup::"
          done

          echo "gameinfo=$gameinfo" >> "$GITHUB_ENV"

          echo "::group::Game info"
          echo $gameinfo | jq
          echo "::endgroup::"

      - name: Update version csv
        run: |
          echo "branch,buildid,timeupdated" > version.csv
          csv_data=`echo $gameinfo | jq -r ".data.\"343050\".depots.branches | to_entries[] | select(.value.pwdrequired != \"1\") | \"\\(.key),\\(.value.buildid),\\(.value.timeupdated)\"" | sort -t, -k3 -n`
          echo "$csv_data" >> version.csv

          echo "::group::Version csv"
          cat version.csv
          echo "::endgroup::"

      - name: Commit changes
        id: commit-changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "update version csv"
          add: "version.csv"

      - name: Read csv
        id: read-csv
        run: |
          rebuild_list=`awk -F, 'NR > 1 {print "{\"branch\": \"" $1 "\", \"buildid\": \"" $2 "\", \"timeupdated\": \"" $3 "\"}"}' version.csv | jq -cr -s '.'`

          echo "rebuild_list=$rebuild_list" >> "$GITHUB_OUTPUT"

          echo "::group::Rebuild list"
          echo $rebuild_list | jq
          echo "::endgroup::"

  rebuild-images:
    needs: get-rebuild-list
    if: needs.get-rebuild-list.outputs.rebuild-list != '[]'
    uses: ./.github/workflows/build.yml
    with:
      build-items: ${{ needs.get-rebuild-list.outputs.rebuild-list }}
    secrets: inherit
